@page "/Register"
@using Microsoft.AspNetCore.Components
@using Elearn.Shared.Dtos
@using Elearn.Shared.Enum
@using Elearn.HttpClients.Service
@using System.Text.RegularExpressions
@using System.Security.AccessControl
@inject IAuthService authService


<EditForm Model="@newUser" OnValidSubmit="CreateNewUserAsync">
    <DataAnnotationsValidator/>
    <MudGrid Class="d-flex justify-center align-center" Elevation="0">
        <MudItem xs="12" sm="7">
            <MudPaper Class="pa-4">
                <h3>
                        <MudInputLabel Class="d-flex align-center justify-center ">Registration</MudInputLabel>
                    </h3>
                    <MudTextField T="string" Label="Username" Required="true" @bind-Value="newUser.Username" InputType="InputType.Text"
                                  For="@(() => newUser.Username)" RequiredError="User name field is required!">
                    </MudTextField>
                    <MudTextField T="string" Label="Password" Required="true" @bind-Value="newUser.Password" InputType="InputType.Password"
                                  For="@(() => newUser.Password)" RequiredError="Password filed is required!">
                    </MudTextField>
                    <MudTextField T="string" Label="Repeat Password" Required="true" @bind-Value="@repeatPassword" InputType="InputType.Password"
                                  For="@(() => @repeatPassword)" RequiredError="Repeat password field is required!">
                    </MudTextField>
                    <MudTextField T="string" Label="Email" Required="true" @bind-Value="newUser.Email" InputType="InputType.Email"
                                  For="@(() => newUser.Email)" RequiredError="Email is required!">
                    </MudTextField>
                    <MudTextField T="string" Label="Name" Required="true" @bind-Value="newUser.Name" InputType="InputType.Text"
                                  For="@(() => newUser.Username)" RequiredError="Name of user is required!">
                    </MudTextField>

                 
                    <MudSelect @bind-Value="newUser.Role" Label="Select role" HelperText="Enum"  AdornmentColor="Color.Secondary">
                        @foreach (var item in Enum.GetValues(typeof(RoleEnum)))
                        {
                            <MudSelectItem Value="@item.ToString()">@item</MudSelectItem>
                        }
                    </MudSelect>

                    <MudCardActions Class="d-flex justify-center">
                        <MudButton Class="mx-2" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" >Create Account</MudButton>
                    </MudCardActions>
            </MudPaper>
        </MudItem>
        
    </MudGrid>


    <ValidationSummary/>
    </EditForm> 


@code {
    public UserCreationDto newUser = new();
    public string repeatPassword;
    
    
    private async Task  CreateNewUserAsync()
    {
        if (newUser.Role.Equals(RoleEnum.Student.ToString()))
            newUser.SecurityLevel = 2;
        if (newUser.Role.Equals(RoleEnum.Teacher.ToString()))
            newUser.SecurityLevel = 4;
     if(repeatPassword.Equals(newUser.Password))
         await authService.RegisterAsync(newUser);

    }

}
